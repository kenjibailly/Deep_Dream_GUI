# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import backend.src.py.windows.dream_images_window as dream_images_window
import backend.src.py.windows.dream_video_window as dream_video_window
import backend.src.py.windows.dream_on_window as dream_on_window
import backend.src.py.windows.images_to_video_window as images_to_video_window
import backend.src.py.windows.help_window as help_window


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1152, 700)
        MainWindow.setMinimumSize(QtCore.QSize(1152, 700))
        MainWindow.setMaximumSize(QtCore.QSize(1152, 700))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1152, 700))
        self.label.setStyleSheet("background-image: url(backend/src/images/main/bg.png);")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("backend/src/images/main/bg.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.button_one = QtWidgets.QPushButton(self.centralwidget)
        self.button_one.setGeometry(QtCore.QRect(200, 150, 306, 234))
        self.button_one.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_one.setAutoFillBackground(False)
        self.button_one.setStyleSheet("background-image: url(backend/src/images/main/button_one.png);\n"
        "border: no-border;")
        self.button_one.setText("")
        self.button_one.setObjectName("button_one")
        self.button_two = QtWidgets.QPushButton(self.centralwidget)
        self.button_two.setGeometry(QtCore.QRect(650, 150, 291, 234))
        self.button_two.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_two.setAutoFillBackground(False)
        self.button_two.setStyleSheet("background-image: url(backend/src/images/main/button_two.png);\n"
        "border: no-border;")
        self.button_two.setText("")
        self.button_two.setObjectName("button_two")
        self.button_three = QtWidgets.QPushButton(self.centralwidget)
        self.button_three.setGeometry(QtCore.QRect(200, 400, 291, 234))
        self.button_three.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_three.setAutoFillBackground(False)
        self.button_three.setStyleSheet("background-image: url(backend/src/images/main/button_three.png);\n"
        "border: no-border;")
        self.button_three.setText("")
        self.button_three.setObjectName("button_three")
        self.button_four = QtWidgets.QPushButton(self.centralwidget)
        self.button_four.setGeometry(QtCore.QRect(650, 400, 291, 234))
        self.button_four.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_four.setAutoFillBackground(False)
        self.button_four.setStyleSheet("background-image: url(backend/src/images/main/button_four.png);\n"
        "border: no-border;")
        self.button_four.setText("")
        self.button_four.setObjectName("button_four")
        self.button_home = QtWidgets.QPushButton(self.centralwidget)
        self.button_home.setGeometry(QtCore.QRect(70, 600, 62, 63))
        self.button_home.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_home.setStyleSheet("background-image: url(backend/src/images/main/home.png);\n"
        "border: no-border;")
        self.button_home.setText("")
        self.button_home.setObjectName("button_home")
        self.button_help = QtWidgets.QPushButton(self.centralwidget)
        self.button_help.setGeometry(QtCore.QRect(1010, 600, 62, 63))
        self.button_help.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_help.setStyleSheet("background-image: url(backend/src/images/main/help.png);\n"
        "border: no-border;")
        self.button_help.setText("")
        self.button_help.setObjectName("button_help")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.button_one.clicked.connect(lambda: clicked('one', MainWindow))
        self.button_two.clicked.connect(lambda: clicked('two', MainWindow))
        self.button_three.clicked.connect(lambda: clicked('three', MainWindow))
        self.button_four.clicked.connect(lambda: clicked('four', MainWindow))
        self.button_home.clicked.connect(lambda: clicked('home', MainWindow))
        self.button_help.clicked.connect(lambda: clicked('help', MainWindow))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Deep Dream Generator"))
        

#  Button Navigation
def clicked(button, MainWindow):
    if button == 'one':
        print('one') # Open Dream Images window
        # MainWindow.close()
        dream_images_window.start_dream_images(MainWindow)
    elif button == 'two':
        print('two') # Open Dream Video window
        dream_video_window.start_dream_video(MainWindow)
    elif button == 'three':
        dream_on_window.start_dream_on(MainWindow)
        print('three') # Open Dream On window
    elif button == 'four':
        print('four') # Open Images to Video window
        images_to_video_window.start_images_to_video(MainWindow)
    elif button == 'home':
        print('home') # Open Home window
    elif button == 'help':
        print('help') # Open Help window
        help_window.start_help(MainWindow)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

def start_main(MainWindow):
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()